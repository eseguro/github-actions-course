name: Cache Node and NPM Dependencies
description: "This action allows to cache both Node and NPM dependencies based on the package-lock.json file"

inputs:
  node-version:
    required: true
    description: "NodeJS version to use"
    default: 20.x
  working-dir:
    required: false
    description: "The working directory of the application"
    default: '.'
  target-env:
    description: Controls whether dev dependencies are installed
    required: false
    default: dev

outputs:
  installed-deps:
    description: Whether dependencies were installed or not
    value: ${{ steps.cache.outputs.cache-hit != 'true' }}

runs:
  using: composite
  steps:
    - name: Setup NodeJS ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: ${{ inputs.working-dir }}/node_modules
        key: node-modules-${{ inputs.target-env }}-${{ hashFiles(format('{0}/{1}', inputs.working-dir, 'package-lock.json')) }}

    - name: Install Dependencies
      env:
        install-command: npm ci ${{ inputs.target-env == 'dev' && '--omit=dev' || '' }}
      if: ${{steps.cache.outputs.cache-hit != 'true' }}
      run: ${{ env.install-command }}
      shell: bash
      working-directory: ${{ inputs.working-dir }}